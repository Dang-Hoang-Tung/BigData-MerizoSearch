- name: Download the ECOLIDB data
  hosts: storagegroup
  vars:
    tmp_dir: /home/almalinux/data/tmp
    data_dir: /home/almalinux/data
  tasks:
    - name: Create temp folder for incomplete downloads
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: directory
        mode: 0755

    - name: Check existence of ECOLIDB archive
      ansible.builtin.stat:
        path: /home/almalinux/data/UP000000625_83333_ECOLI_v4.tar
      register: ecolidb
    - name: Download the ECOLIDB data
      ansible.builtin.get_url:
        url: "https://ftp.ebi.ac.uk/pub/databases/alphafold/latest/UP000000625_83333_ECOLI_v4.tar"
        dest: /home/almalinux/data
        tmp_dest: "{{ tmp_dir }}"
      when: not ecolidb.stat.exists

    - name: Remove temp folder
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: absent

    - name: Create ECOLIDB directory
      ansible.builtin.file:
        path: /home/almalinux/data/UP000000625_83333_ECOLI_v4
        state: directory
        mode: 0755
        owner: almalinux
        group: almalinux

    - name: Count files in the tar file
      shell: tar -tf /home/almalinux/data/UP000000625_83333_ECOLI_v4.tar | grep '\.pdb' | wc -l
      register: tar_file_count
    - name: Count files in the directory
      shell: find /home/almalinux/data/UP000000625_83333_ECOLI_v4 -type f -name '*.pdb'| wc -l
      register: dir_file_count

    - name: End play if file count is the same
      meta: end_play
      when: tar_file_count.stdout == dir_file_count.stdout

    - name: Extract the ECOLIDB archive
      ansible.builtin.unarchive:
        remote_src: true
        src: /home/almalinux/data/UP000000625_83333_ECOLI_v4.tar
        dest: /home/almalinux/data/UP000000625_83333_ECOLI_v4
        extra_opts:
          - --wildcards
          - "*.pdb.gz"

    - name: Extract each .gz file
      ansible.builtin.shell:
        chdir: /home/almalinux/data/UP000000625_83333_ECOLI_v4
        cmd: gunzip *.gz

- name: Download the HUMANDB data
  hosts: storagegroup
  vars:
    tmp_dir: /home/almalinux/data/tmp
    data_dir: /home/almalinux/data
  tasks:
    - name: Create temp folder for incomplete downloads
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: directory
        mode: 0755

    - name: Check existence of HUMANDB archive
      ansible.builtin.stat:
        path: /home/almalinux/data/UP000005640_9606_HUMAN_v4.tar
      register: humandb
    - name: Download the HUMANDB data
      ansible.builtin.get_url:
        url: "https://ftp.ebi.ac.uk/pub/databases/alphafold/latest/UP000005640_9606_HUMAN_v4.tar"
        dest: /home/almalinux/data
        tmp_dest: "{{ tmp_dir }}"
      when: not humandb.stat.exists

    - name: Remove temp folder
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: absent

    - name: Create HUMANDB directory
      ansible.builtin.file:
        path: /home/almalinux/data/UP000005640_9606_HUMAN_v4
        state: directory
        mode: 0755
        owner: almalinux
        group: almalinux

    - name: Count pdb files in the tar file
      shell: tar -tf /home/almalinux/data/UP000005640_9606_HUMAN_v4.tar | grep '\.pdb' | wc -l
      register: tar_file_count
    - name: Count files in the directory
      shell: find /home/almalinux/data/UP000005640_9606_HUMAN_v4 -type f -name '*.pdb' | wc -l
      register: dir_file_count

    - name: End play if file count is the same
      meta: end_play
      when: tar_file_count.stdout == dir_file_count.stdout

    - name: Extract the HUMANDB archive
      ansible.builtin.unarchive:
        remote_src: true
        src: /home/almalinux/data/UP000005640_9606_HUMAN_v4.tar
        dest: /home/almalinux/data/UP000005640_9606_HUMAN_v4
        extra_opts:
          - --wildcards
          - "*.pdb.gz"

    - name: Extract each .gz file
      ansible.builtin.shell:
        chdir: /home/almalinux/data/UP000005640_9606_HUMAN_v4
        cmd: gunzip *.gz
